mutate(GetCare=as.numeric(GetCare))
#ANOVA
a_leave = aov(Leave ~ `Organization Type`, data = a_dat1)
summary(a_leave)
a_quality = aov(Quality ~ `Organization Type`, data = a_dat2)
summary(a_quality)
a_pr = aov(PlanRating ~ `Organization Type`, data = a_dat3)
summary(a_pr)
a_gc = aov(PlanRating ~ `Organization Type`, data = a_dat4)
summary(a_gc)
library(ggplot2)
a_dat1 %>%
ggplot(aes(x=`Organization Type`,y=Leave, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
a_dat2 %>%
ggplot(aes(x=`Organization Type`,y=Quality, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
a_dat3 %>%
ggplot(aes(x=`Organization Type`,y=PlanRating, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
a_dat4 %>%
ggplot(aes(x=`Organization Type`,y=GetCare, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
a_dat1=final_data%>%
filter(`Organization Type`=="Local CCP" | `Organization Type`=="Regional CCP" | `Organization Type`=="1876 Cost")%>%
filter(Leave != "Plan too new to be measured" & Leave !="Not enough data available" & Leave !="Plan too small to be measured" )%>%
mutate(Leave=as.numeric(substr(Leave,1,nchar(Leave)-1)))
a_dat2=final_data%>%
filter(`Organization Type`=="Local CCP" | `Organization Type`=="Regional CCP" | `Organization Type`=="1876 Cost")%>%
filter(Quality != "Plan too new to be measured" & Quality !="Not enough data available" & Quality !="Plan too small to be measured" )%>%
mutate(Quality=as.numeric(Quality))
a_dat3=final_data%>%
filter(`Organization Type`=="Local CCP" | `Organization Type`=="Regional CCP" | `Organization Type`=="1876 Cost")%>%
filter(PlanRating != "Plan too new to be measured" & PlanRating !="Not enough data available" & PlanRating !="Plan too small to be measured" )%>%
mutate(PlanRating=as.numeric(PlanRating))
a_dat4=final_data%>%
filter(`Organization Type`=="Local CCP" | `Organization Type`=="Regional CCP" | `Organization Type`=="1876 Cost")%>%
filter(GetCare != "Plan too new to be measured" & GetCare !="Not enough data available" & GetCare !="Plan too small to be measured" )%>%
mutate(GetCare=as.numeric(GetCare))
#ANOVA
a_leave = aov(Leave ~ `Organization Type`, data = a_dat1)
summary(a_leave)
a_quality = aov(Quality ~ `Organization Type`, data = a_dat2)
summary(a_quality)
a_pr = aov(PlanRating ~ `Organization Type`, data = a_dat3)
summary(a_pr)
a_gc = aov(GetCare ~ `Organization Type`, data = a_dat4)
summary(a_gc)
library(ggplot2)
a_dat1 %>%
ggplot(aes(x=`Organization Type`,y=Leave, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
a_dat2 %>%
ggplot(aes(x=`Organization Type`,y=Quality, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
a_dat3 %>%
ggplot(aes(x=`Organization Type`,y=PlanRating, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
a_dat4 %>%
ggplot(aes(x=`Organization Type`,y=GetCare, fill=`Organization Type`)) +
geom_boxplot() + geom_jitter(width=0.1,alpha=0.2)
#Lets look at some plots with diabetes metrics vs. population.
library(lubridate)
D1_data= final_data %>%
filter(DEye != "Plan too new to be measured" & DEye !="Not enough data available" & DEye !="Plan too small to be measured" & DEye !="No data available" )%>%
mutate(DEye=as.numeric(substr(DEye,1,nchar(DEye)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D2_data= final_data %>%
filter(DKid != "Plan too new to be measured" & DKid !="Not enough data available" & DKid !="Plan too small to be measured"  & DKid !="No data available" )%>%
mutate(DKid=as.numeric(substr(DKid,1,nchar(DKid)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D3_data= final_data %>%
filter(DSugar != "Plan too new to be measured" & DSugar !="Not enough data available" & DSugar !="Plan too small to be measured"  & DSugar !="No data available" & DSugar !="CMS identified issues with this plan's data")%>%
mutate(DSugar=as.numeric(substr(DSugar,1,nchar(DSugar)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D4_data= final_data %>%
filter(DMed != "Plan too new to be measured" & DMed !="Not enough data available" & DMed !="Plan too small to be measured"  & DMed !="No data available" & DMed != "Plan not required to report measure")%>%
mutate(DMed=as.numeric(substr(DMed,1,nchar(DMed)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
#plots
plot(D1_data$logenr,D1_data$DEye)
plot(D2_data$logenr,D2_data$DKid)
plot(D3_data$logenr,D3_data$DSugar)
plot(D4_data$logenr,D4_data$DMed)
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(DEye~logenr + yrs_old,data=D1_data)
lm2=lm(DKid~logenr+ yrs_old,data=D2_data)
lm3=lm(DSugar~logenr+ yrs_old,data=D3_data)
lm4=lm(DMed~logenr+ yrs_old,data=D4_data)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
confint(lm1)
confint(lm2)
confint(lm3)
confint(lm4)
#Lets look at some plots with diabetes metrics vs. population.
library(lubridate)
D1_data= final_data %>%
filter(DEye != "Plan too new to be measured" & DEye !="Not enough data available" & DEye !="Plan too small to be measured" & DEye !="No data available" )%>%
mutate(DEye=as.numeric(substr(DEye,1,nchar(DEye)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D3_data= final_data %>%
filter(DSugar != "Plan too new to be measured" & DSugar !="Not enough data available" & DSugar !="Plan too small to be measured"  & DSugar !="No data available" & DSugar !="CMS identified issues with this plan's data")%>%
mutate(DSugar=as.numeric(substr(DSugar,1,nchar(DSugar)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D4_data= final_data %>%
filter(DMed != "Plan too new to be measured" & DMed !="Not enough data available" & DMed !="Plan too small to be measured"  & DMed !="No data available" & DMed != "Plan not required to report measure")%>%
mutate(DMed=as.numeric(substr(DMed,1,nchar(DMed)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
#plots
plot(D1_data$logenr,D1_data$DEye)
plot(D3_data$logenr,D3_data$DSugar)
plot(D4_data$logenr,D4_data$DMed)
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(DEye~logenr + yrs_old,data=D1_data)
lm3=lm(DSugar~logenr+ yrs_old,data=D3_data)
lm4=lm(DMed~logenr+ yrs_old,data=D4_data)
summary(lm1)
summary(lm3)
summary(lm4)
confint(lm1)
confint(lm3)
confint(lm4)
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(BCS~logenr + yrs_old,data=D1_data)
#Lets look at some plots with  Measures for people in good health vs. population.
library(lubridate)
D1_data= final_data %>%
filter(BCS != "Plan too new to be measured" & BCS !="Not enough data available" & BCS !="Plan too small to be measured" & BCS !="No data available" )%>%
mutate(BCS=as.numeric(substr(BCS,1,nchar(BCS)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D2_data= final_data %>%
filter(CCS != "Plan too new to be measured" & CCS !="Not enough data available" & CCS !="Plan too small to be measured"  & CCS !="No data available" )%>%
mutate(CCS=as.numeric(substr(CCS,1,nchar(CCS)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D3_data= final_data %>%
filter(Flu != "Plan too new to be measured" & Flu !="Not enough data available" & Flu !="Plan too small to be measured"  & Flu !="No data available" & Flu !="CMS identified issues with this plan's data")%>%
mutate(Flu=as.numeric(Flu))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D4_data= final_data %>%
filter(Phys != "Plan too new to be measured" & Phys !="Not enough data available" & Phys !="Plan too small to be measured"  & Phys !="No data available" & Phys != "Plan not required to report measure")%>%
mutate(Phys=as.numeric(substr(Phys,1,nchar(Phys)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D5_data= final_data %>%
filter(MH != "Plan too new to be measured" & MH !="Not enough data available" & MH !="Plan too small to be measured"  & MH !="No data available" )%>%
mutate(MH=as.numeric(substr(MH,1,nchar(MH)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D6_data= final_data %>%
filter(Activity != "Plan too new to be measured" & Activity !="Not enough data available" & Activity !="Plan too small to be measured"  & Activity !="No data available" & Activity !="CMS identified issues with this plan's data")%>%
mutate(Activity=as.numeric(substr(Activity,1,nchar(Activity)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D7_data= final_data %>%
filter(BMI != "Plan too new to be measured" & BMI !="Not enough data available" & BMI !="Plan too small to be measured"  & BMI !="No data available" & BMI != "Plan not required to report measure")%>%
mutate(BMI=as.numeric(substr(BMI,1,nchar(BMI)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
#plots
plot(D1_data$logenr,D1_data$BCS)
plot(D2_data$logenr,D2_data$CCS)
plot(D3_data$logenr,D3_data$Flu)
plot(D4_data$logenr,D4_data$Phys)
plot(D5_data$logenr,D5_data$MH)
plot(D6_data$logenr,D6_data$Activity)
plot(D7_data$logenr,D7_data$BMI)
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(BCS~logenr + yrs_old,data=D1_data)
lm2=lm(CCS~logenr+ yrs_old,data=D2_data)
lm3=lm(Flu~logenr+ yrs_old,data=D3_data)
lm4=lm(Phys~logenr+ yrs_old,data=D4_data)
lm5=lm(MH~logenr + yrs_old,data=D5_data)
lm6=lm(Activity~logenr+ yrs_old,data=D6_data)
lm7=lm(BMI~logenr+ yrs_old,data=D7_data)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
summary(lm5)
summary(lm6)
summary(lm7)
confint(lm1)
confint(lm2)
confint(lm3)
confint(lm4)
confint(lm5)
confint(lm6)
confint(lm7)
Priv_data1= final_data %>%
filter(`Parent Organization`=='UnitedHealth Group, Inc.'
| `Parent Organization`=='Humana Inc.'
| `Parent Organization`=='CVS Health Corporation')%>%
filter(Leave != "Plan too new to be measured" & Leave !="Not enough data available" & Leave !="Plan too small to be measured" )%>%
mutate(Leave=as.numeric(substr(Leave,1,nchar(Leave)-1)))%>%
mutate(uhg=ifelse(`Parent Organization`=='UnitedHealth Group, Inc.',1,0))%>%
mutate(hum=ifelse(`Parent Organization`=='Humana Inc.',1,0))%>%
mutate(cvs=ifelse(`Parent Organization`=='CVS Health Corporation',1,0))
Priv_data2= final_data %>%
filter(`Parent Organization`=='UnitedHealth Group, Inc.'
| `Parent Organization`=='Humana Inc.'
| `Parent Organization`=='CVS Health Corporation')%>%
filter(Quality != "Plan too new to be measured" & Quality !="Not enough data available" & Quality !="Plan too small to be measured" )%>%
mutate(Quality=as.numeric(Quality))%>%
mutate(uhg=ifelse(`Parent Organization`=='UnitedHealth Group, Inc.',1,0))%>%
mutate(hum=ifelse(`Parent Organization`=='Humana Inc.',1,0))%>%
mutate(cvs=ifelse(`Parent Organization`=='CVS Health Corporation',1,0))
Priv_data3= final_data %>%
filter(`Parent Organization`=='UnitedHealth Group, Inc.'
| `Parent Organization`=='Humana Inc.'
| `Parent Organization`=='CVS Health Corporation')%>%
filter(PlanRating != "Plan too new to be measured" & PlanRating !="Not enough data available" & PlanRating !="Plan too small to be measured" )%>%
mutate(PlanRating=as.numeric(PlanRating))%>%
mutate(uhg=ifelse(`Parent Organization`=='UnitedHealth Group, Inc.',1,0))%>%
mutate(hum=ifelse(`Parent Organization`=='Humana Inc.',1,0))%>%
mutate(cvs=ifelse(`Parent Organization`=='CVS Health Corporation',1,0))
Priv_data4= final_data %>%
filter(`Parent Organization`=='UnitedHealth Group, Inc.'
| `Parent Organization`=='Humana Inc.'
| `Parent Organization`=='CVS Health Corporation')%>%
filter(GetCare != "Plan too new to be measured" & GetCare !="Not enough data available" & GetCare !="Plan too small to be measured" )%>%
mutate(GetCare=as.numeric(GetCare))%>%
mutate(uhg=ifelse(`Parent Organization`=='UnitedHealth Group, Inc.',1,0))%>%
mutate(hum=ifelse(`Parent Organization`=='Humana Inc.',1,0))%>%
mutate(cvs=ifelse(`Parent Organization`=='CVS Health Corporation',1,0))
#Linear regression, letting UHG be the "base" category, but adding Humana/CVS as comparison categories
lm1=lm(Leave~hum+cvs,data=Priv_data1)
lm2=lm(Quality~hum+cvs,data=Priv_data2)
lm3=lm(PlanRating~hum+cvs,data=Priv_data3)
lm4=lm(GetCare~hum+cvs,data=Priv_data4)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
confint(lm1)
confint(lm2)
confint(lm3)
confint(lm4)
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(DEye~logenr + yrs_old,data=D1_data)
#Lets look at some plots with diabetes metrics vs. population.
library(lubridate)
D1_data= final_data %>%
filter(DEye != "Plan too new to be measured" & DEye !="Not enough data available" & DEye !="Plan too small to be measured" & DEye !="No data available" )%>%
mutate(DEye=as.numeric(substr(DEye,1,nchar(DEye)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D3_data= final_data %>%
filter(DSugar != "Plan too new to be measured" & DSugar !="Not enough data available" & DSugar !="Plan too small to be measured"  & DSugar !="No data available" & DSugar !="CMS identified issues with this plan's data")%>%
mutate(DSugar=as.numeric(substr(DSugar,1,nchar(DSugar)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D4_data= final_data %>%
filter(DMed != "Plan too new to be measured" & DMed !="Not enough data available" & DMed !="Plan too small to be measured"  & DMed !="No data available" & DMed != "Plan not required to report measure")%>%
mutate(DMed=as.numeric(substr(DMed,1,nchar(DMed)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
#plots
plot(D1_data$logenr,D1_data$DEye)
plot(D3_data$logenr,D3_data$DSugar)
plot(D4_data$logenr,D4_data$DMed)
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(DEye~logenr + yrs_old,data=D1_data)
lm3=lm(DSugar~logenr+ yrs_old,data=D3_data)
lm4=lm(DMed~logenr+ yrs_old,data=D4_data)
summary(lm1)
summary(lm3)
summary(lm4)
confint(lm1)
confint(lm3)
confint(lm4)
coefficients(lm1)
coefficients(lm3)
coefficients(lm4)
coefficients(lm1)
coefficients(lm3)
coefficients(lm4)
coefficients(lm1)[1]
coefficients(lm1)[2]
coefficients(lm1)
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(DEye~logenr + yrs_old,data=D1_data)
lm3=lm(DSugar~logenr+ yrs_old,data=D3_data)
lm4=lm(DMed~logenr+ yrs_old,data=D4_data)
summary(lm1)
summary(lm3)
summary(lm4)
coefficients(lm1)
coefficients(lm3)
coefficients(lm4)
#plots
D1_data %>%  ggplot(aes(DEye, longenr)) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(DEye~logenr + yrs_old,data=D1_data)
lm3=lm(DSugar~logenr+ yrs_old,data=D3_data)
lm4=lm(DMed~logenr+ yrs_old,data=D4_data)
summary(lm1)
summary(lm3)
summary(lm4)
coefficients(lm1)
coefficients(lm3)
coefficients(lm4)
#plots
D1_data %>%  ggplot(aes(DEye, logenr)) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(DEye~logenr + yrs_old,data=D1_data)
lm3=lm(DSugar~logenr+ yrs_old,data=D3_data)
lm4=lm(DMed~logenr+ yrs_old,data=D4_data)
summary(lm1)
summary(lm3)
summary(lm4)
coefficients(lm1)
coefficients(lm3)
coefficients(lm4)
#plots
D1_data %>%  ggplot(aes(DEye, logenr)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
#There may be something here but hard to tell. Let's regress.
#plots
D1_data %>%  ggplot(aes(logenr,DEye)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
#There may be something here but hard to tell. Let's regress.
#plots
D1_data %>%  ggplot(aes(logenr,DEye)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
D3_data %>%  ggplot(aes(logenr,DSugar)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
D4_data %>%  ggplot(aes(logenr,DMed)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
#plots
D1_data %>%  ggplot(aes(logenr,DEye)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")
D3_data %>%  ggplot(aes(logenr,DSugar)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm3)[1], slope = coefficients(lm3)[2], col = "blue")
D4_data %>%  ggplot(aes(logenr,DMed)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm4)[1], slope = coefficients(lm4)[2], col = "blue")
#plots
D1_data %>%  ggplot(aes(logenr,DEye)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")+
ylab("Diabetes Care - Eye Exam") +
xlab("Log of Enrollment")
D3_data %>%  ggplot(aes(logenr,DSugar)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm3)[1], slope = coefficients(lm3)[2], col = "blue")+
ylab("Diabetes Care - Blood Sugar Maintinence") +
xlab("Log of Enrollment")
D4_data %>%  ggplot(aes(logenr,DMed)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm4)[1], slope = coefficients(lm4)[2], col = "blue")+
ylab("Medication adherence for Diabetes Drugs") +
xlab("Log of Enrollment")
#plots
D1_data %>%  ggplot(aes(logenr,DEye)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")+
ylab("Diabetes Care - Eye Exam") +
xlab("Log of Enrollment")
D3_data %>%  ggplot(aes(logenr,DSugar)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm3)[1], slope = coefficients(lm3)[2], col = "red")+
ylab("Diabetes Care - Blood Sugar Maintinence") +
xlab("Log of Enrollment")
D4_data %>%  ggplot(aes(logenr,DMed)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm4)[1], slope = coefficients(lm4)[2], col = "green")+
ylab("Medication adherence for Diabetes Drugs") +
xlab("Log of Enrollment")
#plots
D1_data %>%  ggplot(aes(logenr,DEye)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm1)[1], slope = coefficients(lm1)[2], col = "blue")+
ylab("Diabetes Care - Eye Exam") +
xlab("Log of Enrollment")
D3_data %>%  ggplot(aes(logenr,DSugar)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm3)[1], slope = coefficients(lm3)[2], col = "red")+
ylab("Diabetes Care - Blood Sugar Maintinence") +
xlab("Log of Enrollment")
D4_data %>%  ggplot(aes(logenr,DMed)) +
geom_point(alpha = 0.5) +
geom_abline(intercept = coefficients(lm4)[1], slope = coefficients(lm4)[2], col = "purple")+
ylab("Medication adherence for Diabetes Drugs") +
xlab("Log of Enrollment")
#Lets look at some plots with  Measures for people in good health vs. population.
library(lubridate)
D1_data= final_data %>%
filter(BCS != "Plan too new to be measured" & BCS !="Not enough data available" & BCS !="Plan too small to be measured" & BCS !="No data available" )%>%
mutate(BCS=as.numeric(substr(BCS,1,nchar(BCS)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D2_data= final_data %>%
filter(CCS != "Plan too new to be measured" & CCS !="Not enough data available" & CCS !="Plan too small to be measured"  & CCS !="No data available" )%>%
mutate(CCS=as.numeric(substr(CCS,1,nchar(CCS)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D3_data= final_data %>%
filter(Flu != "Plan too new to be measured" & Flu !="Not enough data available" & Flu !="Plan too small to be measured"  & Flu !="No data available" & Flu !="CMS identified issues with this plan's data")%>%
mutate(Flu=as.numeric(Flu))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D4_data= final_data %>%
filter(Phys != "Plan too new to be measured" & Phys !="Not enough data available" & Phys !="Plan too small to be measured"  & Phys !="No data available" & Phys != "Plan not required to report measure")%>%
mutate(Phys=as.numeric(substr(Phys,1,nchar(Phys)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D5_data= final_data %>%
filter(MH != "Plan too new to be measured" & MH !="Not enough data available" & MH !="Plan too small to be measured"  & MH !="No data available" )%>%
mutate(MH=as.numeric(substr(MH,1,nchar(MH)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D6_data= final_data %>%
filter(Activity != "Plan too new to be measured" & Activity !="Not enough data available" & Activity !="Plan too small to be measured"  & Activity !="No data available" & Activity !="CMS identified issues with this plan's data")%>%
mutate(Activity=as.numeric(substr(Activity,1,nchar(Activity)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D7_data= final_data %>%
filter(BMI != "Plan too new to be measured" & BMI !="Not enough data available" & BMI !="Plan too small to be measured"  & BMI !="No data available" & BMI != "Plan not required to report measure")%>%
mutate(BMI=as.numeric(substr(BMI,1,nchar(BMI)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
#plots
plot(D1_data$logenr,D1_data$BCS)
plot(D2_data$logenr,D2_data$CCS)
plot(D3_data$logenr,D3_data$Flu)
plot(D4_data$logenr,D4_data$Phys)
plot(D5_data$logenr,D5_data$MH)
plot(D6_data$logenr,D6_data$Activity)
plot(D7_data$logenr,D7_data$BMI)
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(BCS~logenr + yrs_old,data=D1_data)
lm2=lm(CCS~logenr+ yrs_old,data=D2_data)
lm3=lm(Flu~logenr+ yrs_old,data=D3_data)
lm4=lm(Phys~logenr+ yrs_old,data=D4_data)
lm5=lm(MH~logenr + yrs_old,data=D5_data)
lm6=lm(Activity~logenr+ yrs_old,data=D6_data)
lm7=lm(BMI~logenr+ yrs_old,data=D7_data)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
summary(lm5)
summary(lm6)
summary(lm7)
confint(lm1)
confint(lm2)
confint(lm3)
confint(lm4)
confint(lm5)
confint(lm6)
confint(lm7)
#Lets look at some plots with  Measures for people in good health vs. population.
library(lubridate)
D1_data= final_data %>%
filter(BCS != "Plan too new to be measured" & BCS !="Not enough data available" & BCS !="Plan too small to be measured" & BCS !="No data available" )%>%
mutate(BCS=as.numeric(substr(BCS,1,nchar(BCS)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D2_data= final_data %>%
filter(CCS != "Plan too new to be measured" & CCS !="Not enough data available" & CCS !="Plan too small to be measured"  & CCS !="No data available" )%>%
mutate(CCS=as.numeric(substr(CCS,1,nchar(CCS)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
D3_data= final_data %>%
filter(BMI != "Plan too new to be measured" & BMI !="Not enough data available" & BMI !="Plan too small to be measured"  & BMI !="No data available" & BMI != "Plan not required to report measure")%>%
mutate(BMI=as.numeric(substr(BMI,1,nchar(BMI)-1)))%>%
mutate(logenr=log(tot_enr,base=10))%>%
mutate(yrs_old=2019-year(mdy(`Contract Effective Date`)))
#plots
plot(D1_data$logenr,D1_data$BCS)
plot(D2_data$logenr,D2_data$CCS)
plot(D3_data$logenr,D7_data$BMI)
#There may be something here but hard to tell. Let's regress.
#Simple linear regression regressing on the log of population and the age of the contract.
lm1=lm(BCS~logenr + yrs_old,data=D1_data)
lm2=lm(CCS~logenr+ yrs_old,data=D2_data)
lm3=lm(BMI~logenr+ yrs_old,data=D3_data)
summary(lm1)
summary(lm2)
summary(lm3)
coef(lm1)
coef(lm2)
coef(lm3)
